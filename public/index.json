[{"content":" So I had an interesting user story the other day. I was asked to implement a new system that would allow users to pay for and download some of our templates.\nThis is all pretty well and easy thanks to Stripe and their Rails API. However we needed a way to allow users to download the templates using a key that expires a week after purcahse and doesn’t provide the user with the storage URL of the template. So thats what I wanted to show a way you can provide the download without giving away the proverbial cow.\nStarting off with this we are going to assume a few things. We are using Ruby on Rails, Uploading is done via CarrierWave (although most of what we will show it doesn’t matter), and we are using Pundit for Authorization.\nLet’s first talk about the routes we will be working with. Our coding is pretty easy. For the scope of this post we will just focus on the download page logic and nothing to do with purchaing.\n/template/:id/download/:purchase_key # Secured page with download buttons /template/:id/download/:purchase_key/[pdf/psd] # route responsaible for serving up the requested documentresources :template, only [:show, :update] do resources :download, only [:show] do collection do get \u0026amp;#39;:id/pdf\u0026amp;#39; =\u0026amp;gt; download#pdf, as: :pdf get \u0026amp;#39;:id/psd\u0026amp;#39; =\u0026amp;gt; download#psd, as: :psd end end end With the routes shown above we should be linked to our controller where all the action happens. First thing we will want to do is ensure the use has a valid key to even be on our downloads page.\nbefore_action :find_purchase def find_purchase unless (@purchase = PurchaseRecord.find_by(key: param[:id]) flash[:error] = \u0026amp;#34;Can\u0026amp;#39;t find purchase.\u0026amp;#34; redirect_to template_path end end\nThis is a quick and easy check for the purchase record and if one is not found we just send the user somewhere else. However if one is found we make it an instance varable so we have access to it in the rest of our calls.\nIt’s also worth noting we will be using pundit for authorizing the downloads. All pundit is doing is verifying the purchase experation date has not passed if so we do a simlar redirect like above but with a flash message that reflects the expired key.\nNow for the part you have probably scrolled down to the bottom to get to as my rambling has gotten the best of you.\nTo do the secure download we can use a few different methods. The easiest would be either send_data or send_file. I prefer send_data as we can just stream the data to the user. If we go with the send_file method we would need to download the template to our server via a tmp file then send that over. To me this seems like wasted stress on the system.\nAs we have two methods that need to use simliar code I decided to dry it out with its own method that they both can call. An example for the PSD would be. def psd authorize @purchase send_template @purchase.psd_template.url, @purchase.psd_template_identifier end\nThis sends our private url and the file name over to the method send_template to handle the buffer. Sending via the buffer is extremely easy. def send_template(url, filename) data = open(url) send_data data.read, filename: filename, disposition: \u0026amp;#39;inline\u0026amp;#39;, stream: \u0026amp;#39;true\u0026amp;#39;, buffer_size: \u0026amp;#39;4096\u0026amp;#39; end\nWith this method we now have an easy way to send the file over without the user ever seeing the real url of the file. While we take a small hit to facilitate the download over all its not to bad for the security of the file. If we also decide for more analitics we can also add in a tracker to the psd and pdf methods so we can track how often they are being downloaded and get some alalitics on our downloads that we couldn’t get before with the old method of giving the users links that we didn’t control.\nAs a bonus if you are using CarrierWave with something like S3 storage you can override the fog_public method in your PDF/PSD uploaders to make the files private in your bucket to only allow your server to grab them. def fog_public false end\nBy putting this method in just your uploader your other uploaders like avatar and general images wont be locked down as they would be if you made this change in the CarrierWave documentation.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey of software development. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2017-02-22_offering-downloads-without-giving-away-the-cow/","summary":"So I had an interesting user story the other day. I was asked to implement a new system that would allow users to pay for and download some of our templates.\nThis is all pretty well and easy thanks to Stripe and their Rails API. However we needed a way to allow users to download the templates using a key that expires a week after purcahse and doesn’t provide the user with the storage URL of the template.","title":"Offering downloads without giving away the cow"},{"content":" I have found while I really enjoy programming full time. It has also brought on some anxiety I was not expecting. I had been up until July a full time IT administrator for a little over 5 years. In this job while still learning a lot the majority of what I did on a day to day basis was memorized and required little to no effort.\nIt has been string moving into a job that while I still knew enough that after a trial run with the company they still wanted to hire me. I find my self outside my knowledge sphere on a daily basis. I love this as I’m currently learning so much. I have a few blog post / videos on the way about what I’ve learned in ActionMailer and Google Client API for Ruby as a result of what all I have been learning.\nHowever, its still an odd place to be in where everyday you don’t feel like you know enough because you are learning so much and reading a lot of documents. I did feel a bit better after talking to my boss and he mentioned I had been doing great work on getting a feature implemented. As well, while listening to the Talk Python to Me podcast. They had mentioned that even after being on the job for 3 months in most projects you still would be new and not know good portions of the code base.\nMain thing I’m trying to get at for new developers (like me) is, it’s okay. Its a new job and I’m sure you are doing a great job. Even if you feel like you should have caught that typo 30 minutes ago and want to pull your hair out. As long as your learning from all the ups and downs you’ll be okay.\nAs well you might not be in the same boat as me. I am working my first job remotely so I don’t have day to day interaction with developers and 60%-70% of my communication is done via text, with me on a timezone difference of 3–6 hours depending on who I need to talk to.\nI’ll end on this note though, I’m so happy to be in a position that I am learning everyday, doing what I love. I wouldn’t trade it for any other line of work.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-08-04_fears-of-a-new-job/","summary":"I have found while I really enjoy programming full time. It has also brought on some anxiety I was not expecting. I had been up until July a full time IT administrator for a little over 5 years. In this job while still learning a lot the majority of what I did on a day to day basis was memorized and required little to no effort.\nIt has been string moving into a job that while I still knew enough that after a trial run with the company they still wanted to hire me.","title":"Fears of a New Job"},{"content":"Making your first push to a project can be a daunting task if you are new to git. Today we are going to review how I do my checks before pushing and what you can do to avoid making mistakes prevalent to newbies.\nFor me my first step is always running a git status. I do this so I can get a quick list of files that have been added/modified/deleted. When I code I might put a binding.pry in a file I made no other edits to for troubleshooting and if I see the file in the list it's a good reminder to open the file and remove my changes.\nNext we jump into a more detail view git diff, will show you all the changes git has registered. Review each line in detail. Make sure you don't have any commented out code that needs removed, or anything like binding.pry that needs removed. What you see in git diff is what will show on your pull request so make sure you won't be embarrassed by anything on it.\nNow that we have all out changes staged and looking good I like to run git add . and git commit -am \u0026amp;#34;\u0026amp;lt;message\u0026amp;gt;\u0026amp;#34; the -a on git commit will make sure you remove any deleted files.\nDon’t do your push just yet, we need to make sure nothing has changed on the master branch that could break our code. For this I take a multistep approach, although it could be narrowed down a bit to be more efficient. First I jump back to my local master branch git checkout master then I pull down the remote master git pull.\nIf changes were pulled down follow this next step otherwise jump to the next paragraph. I then jump back over to my working branch git checkout nic/working-branch and then run a git merge master. The merge will let you know of any conflicts, open any conflicted files and handle the issues as they come up. To leave the commit message screen that opens in vim by default hit :wq and enter on your keyboard. Now our run your test one more time to make sure no changes broke your code.\nAt this point we have all our changes committed locally and our branch is up to date with everything on the master branch. Next we just need to push the code up to the repository. Best practice it to push the code using your branch so project controllers can test your code easily. git push origin nic/working-branch will push our working branch up to the origin. From here we can log into github and build our pull request!\nSo to summarize with a quick list.\ngit status and git diff git add . and git commit -am ‘message’ git checkout master and git pull git checkout nic/working-branch and git merge (if needed) git push origin nic/working-branch login to github and make pull request As always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-06-06_making-your-first-push-in-git/","summary":"Making your first push to a project can be a daunting task if you are new to git. Today we are going to review how I do my checks before pushing and what you can do to avoid making mistakes prevalent to newbies.\nFor me my first step is always running a git status. I do this so I can get a quick list of files that have been added/modified/deleted. When I code I might put a binding.","title":"Making your first push in git"},{"content":"Today I wanted to go over Blocks, Procs, and Lambdas in Ruby via a easy and short over view. There are a lot of post on the subjects already so I am hoping to just give a high level overview to get your interest peaked on some of the most interesting parts of the Ruby language.\nAbove is my last video going over Blocks and how to use them so I will keep my blocks in here short.\nTo overly simply what these are in a way that will probably upset more senior developers:\nBlocks: Chunks of code that will be ran in the parent method that dynamically changes the logic and results of the method. Procs: Much like Blocks but stored as a variable, and can be passed into functions like a variable Lambdas: A step closer to being full on functions than Procs, but are anonymous in their naming. Ranking them in likely to be used:\nBlocks: Used all the time; Good luck avoiding them Procs: Not used as much, but can be helpful in a when using shared logic Lambdas: Rarely used So jumping into some examples Blocks in conjunction with the yield keyword give you an ability to dynamically change logic happening in the middle of a function. One I’m sure you have come across even if your highly new to programming is the .each function used with arrays or ranges.\nWhat happens here is the .each is managing your loop for you and in each iteration is giving you the current variable its on in the loop and allowing you to do what you want to it. Then when control is handed back to the .each method it continues on with the loop.\nAgain see the video above if you would like to see Blocks in action.\nI like to think of Procs as pointers to a function, although pointers are seem more in languages like C++ I believe it fits because of how they are used. Procs are great ways to pass commonly used blocks around in keeping in line with DRY logic. For example if I wanted to have a Proc that prints out the instance variable I would do something like below.\nmy_new_proc = Proc.new { |x| puts x }\nI can easily use this now in any method that takes a block.\n(0..9).each(\u0026amp;amp;my_new_proc)\nTake note of the ampersand before the variable name. In C++ this would be how you call the address of a variable in memory. This would be why I say this reminded me of a pointer to a function in C++ as it would be used in a very similar manner. All you need to remember though is when using a Proc use an ampersand.\nFinally we will do a quick look into Lambdas. I like to think of Lambdas as anonymous functions much like you see in JavaScript but they are a bit more strict. Two things to know about Lambdas is you can return variables from them, something you can’t do in Procs but can in functions. Next, they are very strict about the number of arguments you pass in. Procs don’t care if you pass in more than you should have, but Lambdas will throw an error if the number of arguments are off.\na = lambda do |x,y| puts x + y return x - y end.call(3,5) console output: 8 a = -2\nSo here we define a lambda by using the keyword lambda and giving it a block of code. To we told it to expect two variables and to output to the console and return a number to a variable. Note we had to chain the method .call to the end of the block to fire the method off. As well we passed in the variables in the call method. This would be because our lambda is not method association and we have no way to call the lambda after its defined so we had to call it after we ended its block of code.\nAs you should be able to see Lambdas are interesting but don’t have much of a place in most the code you will write.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-05-30_blocks-procs-lambdas-oh-my/","summary":"Today I wanted to go over Blocks, Procs, and Lambdas in Ruby via a easy and short over view. There are a lot of post on the subjects already so I am hoping to just give a high level overview to get your interest peaked on some of the most interesting parts of the Ruby language.\nAbove is my last video going over Blocks and how to use them so I will keep my blocks in here short.","title":"Blocks, Procs, Lambdas, oh my!"},{"content":" A nice thing to have in your Ruby journey will be a skeleton project so you can quickly get up and running when you need to create a new project. We have done this project in an earlier post for computers running Windows. However, with the upcoming video series on algorithmic challenges in Ruby I wanted to translate the old post for Mac systems. We will be doing all the commands in the terminal, and the Atom editor for writing to the files.\nFirst we will create our skeleton project folder and its sub folders. mkdir skeleton``cd skeleton``mkdir bin data doc ext lib tests lib/PROJECT\nNow with our folder structure of project in place we will just need to create the template files. The commands are: touch bin/PROJECT``touch lib/PROJECT.rb\nThis will create an places we can start putting our new projects code. Next we will want to make a simple gemspec file that will hold the details of our project. We will name this PROJECT.gemspec and it will be located in our root project directory. touch PROJECT.gemspec``atom ./PROJECT.gemspec\nPROJECT.gemspec file contents: # coding: utf-8 lib = File.expand_path(\u0026amp;#39;../lib\u0026amp;#39;, __FILE__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)``Gem::Specification.new do |spec| spec.name = \u0026amp;#34;PROJECT\u0026amp;#34; spec.version = \u0026amp;#39;1.0\u0026amp;#39; spec.authors = [\u0026amp;#34;Your Name Here\u0026amp;#34;] spec.email = [\u0026amp;#34;youremail@yourdomain.com\u0026amp;#34;] spec.summary = %q{Short summary of your project} spec.description = %q{Longer description of your project.} spec.homepage = \u0026amp;#34;http://domainforproject.com/\u0026amp;#34; spec.license = \u0026amp;#34;MIT\u0026amp;#34;``spec.files = [\u0026amp;#39;lib/PROJECT.rb\u0026amp;#39;] spec.executables = [\u0026amp;#39;bin/PROJECT\u0026amp;#39;] spec.test_files = [\u0026amp;#39;tests/test_PROJECT.rb\u0026amp;#39;] spec.require_paths = [\u0026amp;#34;lib\u0026amp;#34;] end\nAfter the gemspec file is done we will want to create our Rakefile to help us with automating common task when working with Ruby. This Rakefile will be used to help run our test. touch Rakefile``atom ./Rakefile\nRakefile file contents: require \u0026amp;#39;rake/testtask\u0026amp;#39;``Rake::TestTask.new do |t|``t.libs \u0026amp;lt;\u0026amp;lt; \u0026amp;#34;tests\u0026amp;#34;``t.test_files = FileList[\u0026amp;#39;test/test*.rb\u0026amp;#39;]``t.verbose = true``end\nFinally we will want to make a simple test file to finish up our skeleton project touch tests/test_PROJECT.rb``atom ./tests/test_PROJECT.rb\ntest_PROJECT.rb contents: require \u0026amp;#34;./lib/PROJECT.rb\u0026amp;#34;``require \u0026amp;#34;test/unit\u0026amp;#34;``class TestName \u0026amp;lt; Test::Unit::TestCase``def test_sample``assert_equal(4, 2+2)``end``end\nNow we should have our test project all finished up. You can test your project by calling “rake test” from your project’s root directory. If setup correctly you should get a passed test without any failures or errors. Below is the file structure you should have now. skeleton/``PROJECT.gemspec``Rakefile``data/``ext/``tests/``test_NAME.rb``bin/``PROJECT``lib/``PROJECT``PROJECT.rb\nNow when you want to use this to creating a new project all you will need to do is the following.\nCopy the skeleton project and rename the root folder to your new project name Rename the lib/PROJECT.rb file and the lib/PROJECT folder to the new project name Edit the Gemspec file to fit the new project rename and tests/test_PROJECT.rb and make sure to edit the ‘require “./lib/PROJECT.rb”’ inside that test file Double check everything is working by calling “rake tests”. Happy Coding! As always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-05-23_skeleton-ruby-project-mac-edition/","summary":"A nice thing to have in your Ruby journey will be a skeleton project so you can quickly get up and running when you need to create a new project. We have done this project in an earlier post for computers running Windows. However, with the upcoming video series on algorithmic challenges in Ruby I wanted to translate the old post for Mac systems. We will be doing all the commands in the terminal, and the Atom editor for writing to the files.","title":"Skeleton Ruby Project: Mac Edition"},{"content":" One question I hear a lot and have even asked myself a while back ago is “When do I know enough to start looking for a job”. While this question is very complicated and depends on a lot of factors I wanted to go into my background a bit and what got me to the point of saying “I know enough”.\nLike I’ve mentioned in the past I have about 5 years of hobbyist programming under my belt but until recently I have not really had much to show for it. Mostly due to a lack of discipline and not staying in a stack long enough to learn the amount needed to get a job.\nTypically if you look at boot camps and online courses they have you go though and make at least 6 sample projects to show off on your own website. I think this is a great as it gives you a lot of experience and a lot to show off in interviews. My only warning is don’t do the same thing over again. For instances if you are wanting to get into website programming. Make your portfolio, an app that uses API’s like Wikipedia, maybe a small game like [Simon] (http://ollis.me/simon/)(this has gotten praise at interviews before), and more diversity depending on what kind of projects interest you. Same applies if you are looking for Android programming or even Game Programming. If you want a job making mobile apps, first start making apps to show you know your stuff.\nThis will give you a solid foundation, and proof you know your stuff. While you still wont be an expert you should have enough to land an entry job depending on where you are.\nHowever, if you are like me you might still be worried. I have always been odd with my self esteem and worried while I feel I know a lot about programming, would I be able to keep up in a team environment with deadlines?\nThe big vindication for me was participating in my first hackathon. During the hackathon we used the MEAN stack. The only technology I have used in the MEAN stack up to this point was JavaScript and to my surprise we used TypeScript instead of JavaScript so I was really out of water on this. So to give me somewhere I could work I asked to be on the front end, as although I didn’t know Angular JS at the time, I could do HTML, CSS, and limp my way though TypeScript.\nI am happy to say I was able to pickup enough on the technology pretty quickly to contribute features and code to the front end. Being able to be throw into a new tech stack and in 24 hours be able to churn out code was the confidence boost I needed to feel like I could take on a programming job and not completely fail on day one.\nHowever, I do have some warnings with hackathons. Find a team before the event. I was lucky and met a very nice guy at the Ruby meetup in town that was going to be at the hackathon and he got me on his team who had an experience developer who was just looking to have a good time and didn’t mind looking over the new guys.\nWhile I didn’t know the guy from the Ruby meetup other than our one conversation, that was enough to get onto a team that did some great things. I say this because I over heard the people who helped find teams for coders say they put all the “dead weight” on one team to let it sink. Its very sad as I feel hackathons should be for community development more then the outcomes of the projects. A whole team of people excited to get into coding ended up getting a horrible experience that could have very well killed their desire in coding.\nTo wrap up what has turned into a ramble. Pick your platform of choice and make 6 unique apps / sites that all have their own features. Don’t be afraid to clone, they are just example projects. Go to a hackathon, or a local meetup on a night they might be doing a coding project. Main thing is don’t go to a hackathon alone. Ask around a meetup group and see if anyone else is going and if they have room on their team for one more. At the end of the day coding skills are important, but your confidence in learning new skills quickly will determine your success in an ever changing technology world.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-05-16_when-to-start-looking-for-a-job/","summary":"One question I hear a lot and have even asked myself a while back ago is “When do I know enough to start looking for a job”. While this question is very complicated and depends on a lot of factors I wanted to go into my background a bit and what got me to the point of saying “I know enough”.\nLike I’ve mentioned in the past I have about 5 years of hobbyist programming under my belt but until recently I have not really had much to show for it.","title":"When to start looking for a job"},{"content":" Today I wanted to review automating code review inside of ruby.\nTheir meeting great open source projects to help make sure you are sticking to an idiomatic way of coding in ruby. The main one I will focus on today is Robocop and Robocop-git.\n[Rubocop] (https://github.com/bbatsov/rubocop)is an open source gym for ruby that will review your project and let you know of any “best practices” you are not adhering too. As described on the Rubocop github page. Out of the box it will enforce guidelines set by the Ruby Style Guide.\nBest of all, not only will it report problems to you, but using the -a flag it can even auto correct many of the problems it fined.\nRubocop is extremely easy to install just rungem install rubocopfrom there you can easily run rubo cop on your project by just running rubocop in your terminal in the root of your project.\nRubocop can be a great tool for you to run on a project to try an help contribute when you are a new comer and still learning your way around ruby. However, don’t just go editing without thought. Sometime we might use fail instead of rescue because it looks better when reading. However, Rubocop wont know that and still tell you to correct it. This might lead to your efforts of helping out an open sourced project being shot down. Moral of the story, don't get to trigger happy just because Rubocop says it should be changed.\nHowever, one issue is you might be working in a very large project and you don’t want to run rubocop on the whole project due to the time / complexity of the results. You might also just want to run Rubocop on the code changes you made.\nFor this project we have the project Rubocop-git this is just an addition on top of rubocop. However, in this project it will parse your git diff data and only show you issues on the code you have changed. This is great for when you are just wanting to run a quick check on the code you contributed to make sure it wont get sent back for something silly as using some outdated method name / convention.\nI personally have contributed to the rubocop-git project, although at the time of writing this it has still not been pulled into the master branch. I added the autocorrect flag -a found in the normal rubocop project back into the rubocop-git project. If you would like to start using this feature before it gets pulled into the master feel free to download the project on my repo.\nAs a new developer I highly recommend using one of these gems while you are still learning the ropes to help you get productive quickly and not get things shot down because they didn’t conform to the style guidelines.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-05-09_automated-code-review-in-ruby/","summary":"Today I wanted to review automating code review inside of ruby.\nTheir meeting great open source projects to help make sure you are sticking to an idiomatic way of coding in ruby. The main one I will focus on today is Robocop and Robocop-git.\n[Rubocop] (https://github.com/bbatsov/rubocop)is an open source gym for ruby that will review your project and let you know of any “best practices” you are not adhering too.","title":"Automated Code Review in Ruby"},{"content":"Program Practical is now on youtube. This month I am moving to a bi-media format with blog post going to start coming out weekly on Program Practical, as well weekly video post on YouTube.\nThese post will cover a range of programming topics, from progress updates, coding tutorials, and coding news. I will be currently be focused more on Ruby and Rails, but might jump into C++, Python, and other languages depending on my current project or topic request.\nThe current videos in the pipeline include a background on my coding past, some code problem solving in C++, and one I’m shooting tonight on making Linked List in Ruby.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Subscribe to the Program Practical channel on YouTube. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-05-02_live-on-youtube/","summary":"Program Practical is now on youtube. This month I am moving to a bi-media format with blog post going to start coming out weekly on Program Practical, as well weekly video post on YouTube.\nThese post will cover a range of programming topics, from progress updates, coding tutorials, and coding news. I will be currently be focused more on Ruby and Rails, but might jump into C++, Python, and other languages depending on my current project or topic request.","title":"Live on YouTube"},{"content":"We are officially into april now I figured I would do my monthly wrap up and planning blog. March was an okayish month. If you follow along you would noticed I only ended up posting 3 times last month. While I am working on studying a lot I have started looking at developer jobs. With this I’m not posting too much about the places or the journey but it has shaped a bit about what I will be doing this month.\nFirst off to catch up on what was done last month. I have started doing some live streaming although disorganized it’s a start. During the stream I was working on adding a new feature to a gem rubocop-git. That is currently pending via pull request but is available on my page. I have also continued on the rails tutorial but have chosen not to live stream that due to the content and with the reading, it’s not a good stream subject.\nFor the month of april I’ll be switching gears at least for the next few weeks and studying PHP and the Craft CSM. I’m currently working on an opportunity but they use PHP and Craft as their development platform. Once we wrap that up in a few weeks I’m hoping to finish up the Rails tutorial later this month and start working on a new open sourced project I’m pretty excited about and will be live streaming a good amount of its creation.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-04-09_april-showers-bring-in-some-changes/","summary":"We are officially into april now I figured I would do my monthly wrap up and planning blog. March was an okayish month. If you follow along you would noticed I only ended up posting 3 times last month. While I am working on studying a lot I have started looking at developer jobs. With this I’m not posting too much about the places or the journey but it has shaped a bit about what I will be doing this month.","title":"April showers bring in some changes"},{"content":"It’s been a bit between post. With the holidays things tend to get busy with my family. I have started live streaming some coding. I’m hoping to make it a more regular thing, although I’m trying to work it into a fixed point on in my week.\nAfter editing some of the dead points of the live stream I plan to release the video’s on youtube. The current live stream is following me along as I’m adding a new feature to the open sourced project rubocop-git. Currently on the stream it’s me and my friend Alex, who is just getting into program. While he is not busy with work he is helping to ask questions that I might not think about bringing up for newer programmers.\nFor the future I plan to do some more live streams on the other open sourced projects I’m working on and how to contribute to open sourced projects. I am also planning a series this summer when bash comes to windows to see how windows stacks up for Ruby and Ruby on Rails development.\nFor anyone that missed the news yesterday. Windows will be releasing an “anniversary update” or Windows 10.1 this summer. They have partnered with Canonical to bring “a full ubuntu image” into windows as a subsystem. Allowing you to asses bash in a full linux like environment. This should allow for file I/O and threading to happen the same way linux implements it. It’s my hope (and windows) that this will bring development back to windows for many projects and libraries that have no, or broken support for windows.\nThe live streaming will be happening over on YouTube as well I’m hoping to have last night’s stream live soon. It’s a little rough but it’s a start.\nAs always thanks for reading, and follow me on twitter for more daily updates, live stream alerts, and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-03-31_live-streaming/","summary":"It’s been a bit between post. With the holidays things tend to get busy with my family. I have started live streaming some coding. I’m hoping to make it a more regular thing, although I’m trying to work it into a fixed point on in my week.\nAfter editing some of the dead points of the live stream I plan to release the video’s on youtube. The current live stream is following me along as I’m adding a new feature to the open sourced project rubocop-git.","title":"Live Streaming"},{"content":"Well sadly more and more I find myself programming on my Mac over my Windows machine. While I still believe windows is a great platform for programming even in Ruby it’s all come down to one thing. Time. The more projects I work on the more gems I get exposed to and the more errors those gems produce due to not being testing or just no support for windows. While this may be addressable by installing a linux wrapper like cygwin onto the windows system I have not personally gave it a try.\nWhile trying to use the windows machine I am constantly researching error messages that end in one of three ways. I change some config in that gem to fix the issue, rollback gem versions to one that worked on windows, or move over to the mac.\nIt’s unfortunate however it’s understandable. As I mentioned in another blog post, most ruby/rails app are going to be running on linux servers, so why break your back to support a development environment that will have no implementation in production.\nWith time being my main driver it’s more important to get things done then fight with a half supported platform. I have been working on my Macbook Air for a good part of the time. The only issue with it, is it stresses to run on my ultrawide display. However, I have found a home lately on Cloud9. It has provided me a nice web ide to program in, while giving me access to a Ubuntu linux terminal to do all my ruby and rails work in. The biggest issue I have with Cloud9 is just with the IDE itself. I use Atom on my computers and love the keyboard shortcuts and little gems it can do speeding up my programming time. The only other issue I have is speed of the VM. it takes a while to run rake test although I have been told if I upgrade to a paid account you get more power.\nHowever, at the end of the day it does what I need. So if you are looking at getting into rails and can’t afford a mac I’d encourage you to check out Cloud9. Your projects are public however, in your learning just about everything you do should be on github so its not really a big deal. Main thing is don’t let yourself get discouraged by all the errors you are getting. Move to a Linux or Mac environment so you can focus on learning, and not troubleshooting.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-03-17_tossing-in-the-towel-for-windows/","summary":"Well sadly more and more I find myself programming on my Mac over my Windows machine. While I still believe windows is a great platform for programming even in Ruby it’s all come down to one thing. Time. The more projects I work on the more gems I get exposed to and the more errors those gems produce due to not being testing or just no support for windows. While this may be addressable by installing a linux wrapper like cygwin onto the windows system I have not personally gave it a try.","title":"Tossing in The Towel for Windows"},{"content":"March is upon us and I just finished up One Month Rails. While I did enjoy the class I have to say even coming from someone who is new to Rails it went insanely slow at the beginning allowing me to finish the whole course in about a week. However, I will say there explanation and run through of a MVC framework was amazing. I have worked in them before but feel I have a better understanding now than I ever had in the past.\nWhile I still feel $45 is completely overpriced for the content, I was happy I got a coupon to take the course for a dollar. I could still see the course being worth $45 though if you are completely new to backend web programming as they do break down some concepts well enough that it should be a good start before going with more advanced material.\nSo what’s the plans for March? I’ve take the first few days of this week off for a break and to deal with the loss of our oldest dog. However, I’ll be starting up with Michael Hartl’s Rails Tutorial for more of an in depth look at rails and away from all the generated code and scaffolding found in One Month Rails.\nI’m excited to get both into this new month of rails programing and get yet another project for the portfolio that is now live!\nAs for meetups this month it is always important to stay connected. We have the Indy.rb meetup this week, and later this month the Bloomington.rb meetup. Hopefully I’ll get to attend the local Open Indy meetup where we hope to continue some of the work from the hackathon. However, with spring break looming over next week we will have to see if the local meetup groups take a hiatus like the rest of the town.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below, and don’t forget it’s always a good time to start to #LearnToCode\n","permalink":"https://blog.oll.is/posts/2016-03-08_kicking-off-a-new-month/","summary":"March is upon us and I just finished up One Month Rails. While I did enjoy the class I have to say even coming from someone who is new to Rails it went insanely slow at the beginning allowing me to finish the whole course in about a week. However, I will say there explanation and run through of a MVC framework was amazing. I have worked in them before but feel I have a better understanding now than I ever had in the past.","title":"Kicking off a new month"},{"content":" This last weekend I got to participate in #INCapitolHack. A hackathon to help create solutions for the city of Indianapolis Indiana. This was my first hackathon and I wanted to share some of my experience with other working-to-be developers.\nThe event started Friday night with an overview of the event to come and team creation time. One of the biggest thing I will say is get on a team before the event. This might seem a hard task if you’re like me and are new to social development and only been to a meetup or two. My advice here is go social. I sent out messages on twitter, flowdock, and meetup asking if anyone from the local Ruby group would be attending the hackathon. I ended up messaging a fellow I met at the Bloomington ruby meetup when I saw him RSVP’d to the event on another meetup page. He had also found someone on meetup and we had our team.\nThe reason why I say doing use the help of the hackathon to get on a team is because I overheard the organizers the next day talking about creating teams the day before. In one guy’s words “I just put all the dead weight on one team”. I find this is horrible as hopeful developers can learn a lot of experienced ones in hackathons and while they might be “dead weight” split around evenly you can really help the tech community grow. Something they were claiming to do.\nAs for the mindset of “I don’t know enough to do this”. If you know some front end stuff including HTML and CSS then you can be helpful. Going in I have never touched any part of the MEAN stack, however that is what we were going with. I stayed up late the first night getting my laptop ready for the next day as the team chatted on Slack, and looked through some of the aspects of the MEAN stack.\nThe key here is having someone on your team who is experienced, and allowing them to pick the development stack as they can really be a team leader and help in your 24-hour crash course into this new tech. As well if you created the team early enough before the event you can all be team programing and learning the stack before the event.\nHowever, after the event was over, we might not have one but we made new friends and learned new technology. As well for me I gained the confidence that I can learn quickly and become competent enough in start producing in a short amount of time in a new stack. This has pushed me enough to know I can survive as a Jr. Developer.\nI can’t stress it more, if you’re trying to become a developer, get out and go to hackathons. The experience in team work, deadlines, knowledge, and producing under stress is unmatched in anything else you can get in a short 24-hour timespan.\nAs always thanks for reading find more on my blog at Program Practical, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below.\n","permalink":"https://blog.oll.is/posts/2016-03-02_experience-and-advice-from-a-newbies-first-hackathon/","summary":"This last weekend I got to participate in #INCapitolHack. A hackathon to help create solutions for the city of Indianapolis Indiana. This was my first hackathon and I wanted to share some of my experience with other working-to-be developers.\nThe event started Friday night with an overview of the event to come and team creation time. One of the biggest thing I will say is get on a team before the event.","title":"Experience and Advice from a Newbies First Hackathon"},{"content":" This weekend I have the honor of participating and the #INCapitolHack hosted by the Indianapolis Chamber of Commerce. While I’ll be typing up another post about my experience and what we did. I wanted to take the time to type up what was in my bag for the event, to help new comers feel prepared for going to their first hackathon.\nBeing my first hackathon I wasn’t to sure what I might need or should bring so I made sure to have a little big of everything.\nElectronic wise I was sporting:\n13\u0026quot; MacBook Air (Yes is provides plenty of power for web dev, although I wish for better resolution) iPad Mini (For testing responsive design on an actual mobile browser Nexus 6 (taking photo) Moto360 Watch Tech wise I was pretty covered, I only used my iPad for about 10 minutes, but not knowing the teams goals I didn’t know how mobile we would be set on. I’ll end up bringing it to the next one as things might change.\nElectronic Accessories included:\nRazer BlackWidow TE Keyboard (Green) Apple Magic Mouse LG Mobile Wireless Mouse LG Bluetooth headphones Generic wired ear buds 8GB Flash Drive Google Fi Power Brick Cat 5e cable and Ethernet adapter For the accessories I’m happy to have had my keyboard, I type much better/quicker on it than the cheaper laptop keyboard. As well two mice was a good plan, as my Magic Mouse decided to keep disconnecting from my laptop while I was there so I ended up switching to the LG. Although I was working in a team you go on sprints where you have a job and need to get it done, rocking out to some good tunes helps me keep going so the head phones are a must for me, although I would only keep on bud in at a time. The flash drive and power brick are also great haves, like the iPad things change, although my team was well organized and used GitHub for all of our code sharing and Slack for some quick code sharing I saw teams less organized and having issues with code sharing. We where also lucky to have amazing wifi making pulls and pushes quick and easy. The power brick was nice to have as you never know what the power situation is going to be like and the MacBook Air only has 2 usb ports. As for my Cat5e and adapter I would probably leave those at home next time. However, they are normally just in my laptop bag so I left them in\nNon Tech Accessories:\nMulticolor pin, Black pin My Normal take-with-me notepad Larger notepad used for design work Not much on the non-tech accessories. I’ll end up leaving my larger notepad and MC pin at home next time. One thing I learned in a hackathon is you have no time. design concepts and work is done on the fly. Although my take-with-me notepad will always stay in my bag. I highly recommend one. You get some QA with the judges and other talks worth taking notes in. As well just taking in a new team of people you learn new things and stuff to research later and its good to have something to write it all down in.\n","permalink":"https://blog.oll.is/posts/2016-02-29_inside-my-tech-bag-for-incapitolhack/","summary":"This weekend I have the honor of participating and the #INCapitolHack hosted by the Indianapolis Chamber of Commerce. While I’ll be typing up another post about my experience and what we did. I wanted to take the time to type up what was in my bag for the event, to help new comers feel prepared for going to their first hackathon.\nBeing my first hackathon I wasn’t to sure what I might need or should bring so I made sure to have a little big of everything.","title":"Inside my Tech Bag for INCapitolHack"},{"content":"So far I have stuck to my guns and continued to develop with Ruby on Rails on a Windows machine. I am overall quite happy with my experience although I have ran into some fun roadblocks.\nOne of the biggest issues I have found with developing on Windows has been Ruby Gems not fully supporting it. The first Gem I encountered with issues was “ReRun” a nice little gem that would auto reload my Sinatra app when it noticed files had been changed. While this gem isn’t needed now that I’m on Rails, it completely fails to run on Windows. Further investigation shows a developer who is quick to throw in the towel saying that he has no access to a windows machine so he will not be fixing it. This bothers me for a few reasons but mainly I run a MacBook Air. Even that small laptop runs a windows 7 VM on top of OS X without issues. However, the Gem is open sourced, so I feel the real reason it lacks support is because it lacks interest. However, it’s important to note for Windows developers that not all gems play nice.\nI also wonder as time goes on if gem problems isn’t a good thing. For many new developers one of the challenges I find my friends face is learning to search for solutions. While you can make the argument that it could make new developers shy away from learning to program, I argue that it can help make them better programmers over time.\nOne of the Rubiest from our Indy meetup had mentioned he isn’t against developing on Windows. However, when you are making the money software developers made the cost difference is really minimal to be more productive. After all once you have learned enough to land a job it might be best not to spend 1/2 of your continued learning time troubleshooting windows only gem bugs.\nHowever, I feel that the paywall of learning ruby shouldn’t hang on developers pushing would-be developers to by a who new computer. I’ll be releasing a video series soon for setting up Ruby on Rails on a Windows machine and some of the house cleaning things to make the setup easy. However, for now if you are looking into becoming a Ruby developer and don’t have the cash for a hot new Mac, or don’t want to spend the money on it I have three recommendations.\nGo for it, you will run into many issues on a Mac as well, while it might not be as much it’ll take the same skills to resolve so might as well get some good experience. Go used. I live near a University, its common for them to have outlet stores to sell old equipment. You can pick up 2–3 year old Mac Mini’s for $300 there. Go cloud. Using a service like Cloud9 is amazing because you get a full Ubuntu virtual machine and IDE in the browser. I use this now for some projects to make it easy to go back and forth between my desktop and laptop without having to worry about if I pushed code to GitHub. As always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below.\n","permalink":"https://blog.oll.is/posts/2016-02-24_developing-ruby-on-windows/","summary":"So far I have stuck to my guns and continued to develop with Ruby on Rails on a Windows machine. I am overall quite happy with my experience although I have ran into some fun roadblocks.\nOne of the biggest issues I have found with developing on Windows has been Ruby Gems not fully supporting it. The first Gem I encountered with issues was “ReRun” a nice little gem that would auto reload my Sinatra app when it noticed files had been changed.","title":"Developing Ruby on Windows"},{"content":" It has been a fun month so far. I just wrapped up “Learn Ruby the Hard Way” finishing the two books from “No Degree, No Problem” you read before getting into rails. Next step I’m starting today is “One Month Rails”.\nI reviewed the site last night and almost signed up but as its a monthly charge I decided to wait until the start of my study time today. This actually worked out really well because as I was 1/2 though the checkout process then quick on the credit card screen they sent me a coupon in my email for the first month for only $1 instead of the $45 I was about to pay last night.\nAs for “Learn Ruby the Hard Way” I have to say while I enjoyed the book there are some things that really bothered me.\nFirst off while Zed addresses this issue the code is not written in a way many Rubiest would call normal. It favors python styling of code that while you are still learning Ruby might make your code portfolio questionable by more senior developers. Zed does acknowledge this and even says he should not be your only book and encourages your to look at Ruby coding standards later in the book to start seeing how you should be writing. As well at the time of writing this post Zed is working on the 4th edition of his book that will be rewritten in idiomatic code and “updated content that matches or even better Learn Python the Hard Way”. It will be interesting to review the book once it comes out.\nMy other issues with the book is there is no mention of Rspec, and favor of sinatra. From the people, code, and meetups i’ve been too and seen. Rspec is primarily used for testing in Ruby. Especially if you want to use some mutation testing gems. Instead Zed focuses on Test::Unit for all the testing and while I’m happy to have started learning to test my code I feel its a weakness in my portfolio to upload this non-standardized code and test to github. As well he pushes Sinatra for making a website. While I find Sinatra very easy to get into and no problems there it’s on of those gems that I feel many looking at the project will go, “This is nice but we don’t have anything here that runs Sinatra, where is your Ruby on Rails projects?”\nI still recommend the book has you can view it online for free and it does really break down some hard concepts that I know tripped me up years ago when I was learning to program in C# back in high school. I really hope the 4th edition corrects some of the issues addressed here and it can become a good foundation for not just understanding code but also learning how to properly code in Ruby.\nThis has been a fun month learning Ruby and I can’t wait to get into Rails starting today! As always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below.\n","permalink":"https://blog.oll.is/posts/2016-02-22_onto-rails-and-a-review-of-whats-been-done/","summary":"It has been a fun month so far. I just wrapped up “Learn Ruby the Hard Way” finishing the two books from “No Degree, No Problem” you read before getting into rails. Next step I’m starting today is “One Month Rails”.\nI reviewed the site last night and almost signed up but as its a monthly charge I decided to wait until the start of my study time today. This actually worked out really well because as I was 1/2 though the checkout process then quick on the credit card screen they sent me a coupon in my email for the first month for only $1 instead of the $45 I was about to pay last night.","title":"Onto Rails and a Review of What’s Been Done"},{"content":" A nice thing to have in your Ruby journey will be a skeleton project so you can quickly get up and running when you need to create a new project. For this we will be setting up in a windows environment using Powershell and Visual Studio’s Code callabled by “code”.\nFirst we will create our skeleton project folder and its sub folders. mkdir skeleton``cd skeleton``mkdir bin, data, doc, ext, lib, tests, lib/PROJECT\nNow with our folder structure of project in place we will just need to create the template files. In Powershell the commands are: new-item -type file bin/PROJECT``new-item -type file lib/PROJECT.rb\nThis will create an places we can start putting our new projects code. Next we will want to make a simple gemspec file that will hold the details of our project. We will name this PROJECT.gemspec and it will be located in our root project directory. new-item -type file PROJECT.gemspec``code ./PROJECT.gemspec\nPROJECT.gemspec file contents: # coding: utf-8 lib = File.expand_path(\u0026amp;#39;../lib\u0026amp;#39;, __FILE__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)``Gem::Specification.new do |spec| spec.name = \u0026amp;#34;PROJECT\u0026amp;#34; spec.version = \u0026amp;#39;1.0\u0026amp;#39; spec.authors = [\u0026amp;#34;Your Name Here\u0026amp;#34;] spec.email = [\u0026amp;#34;youremail@yourdomain.com\u0026amp;#34;] spec.summary = %q{Short summary of your project} spec.description = %q{Longer description of your project.} spec.homepage = \u0026amp;#34;http://domainforproject.com/\u0026amp;#34; spec.license = \u0026amp;#34;MIT\u0026amp;#34;``spec.files = [\u0026amp;#39;lib/PROJECT.rb\u0026amp;#39;] spec.executables = [\u0026amp;#39;bin/PROJECT\u0026amp;#39;] spec.test_files = [\u0026amp;#39;tests/test_PROJECT.rb\u0026amp;#39;] spec.require_paths = [\u0026amp;#34;lib\u0026amp;#34;] end\nAfter the gemspec file is done we will want to create our Rakefile to help us with automating common task when working with Ruby. This Rakefile will be used to help run our test. new-item -type file Rakefile``code ./Rakefile\nRakefile file contents: require \u0026amp;#39;rake/testtask\u0026amp;#39;``Rake::TestTask.new do |t|``t.libs \u0026amp;lt;\u0026amp;lt; \u0026amp;#34;tests\u0026amp;#34;``t.test_files = FileList[\u0026amp;#39;test/test*.rb\u0026amp;#39;]``t.verbose = true``end\nFinally we will want to make a simple test file to finish up our skeleton project new-item -type file tests/test_PROJECT.rb``code ./tests/test_PROJECT.rb\ntest_PROJECT.rb contents: require \u0026amp;#34;./lib/PROJECT.rb\u0026amp;#34;``require \u0026amp;#34;test/unit\u0026amp;#34;``class TestName \u0026amp;lt; Test::Unit::TestCase``def test_sample``assert_equal(4, 2+2)``end``end\nNow we should have our test project all finished up. You can test your project by calling “rake test” from your project’s root directory. If setup correctly you should get a passed test without any failures or errors. Below is the file structure you should have now. skeleton/``PROJECT.gemspec``Rakefile``data/``ext/``tests/``test_NAME.rb``bin/``PROJECT``lib/``PROJECT``PROJECT.rb\nNow when you want to use this to creating a new project all you will need to do is the following.\nCopy the skeleton project and rename the root folder to your new project name Rename the lib/PROJECT.rb file and the lib/PROJECT folder to the new project name Edit the Gemspec file to fit the new project rename and tests/test_PROJECT.rb and make sure to edit the ‘require “./lib/PROJECT.rb”’ inside that test file Double check everything is working by calling “rake tests”. Happy Coding! As always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer. Feel free to ask any questions in the comments below.\n","permalink":"https://blog.oll.is/posts/2016-02-16_creating-a-ruby-skeleton/","summary":"A nice thing to have in your Ruby journey will be a skeleton project so you can quickly get up and running when you need to create a new project. For this we will be setting up in a windows environment using Powershell and Visual Studio’s Code callabled by “code”.\nFirst we will create our skeleton project folder and its sub folders. mkdir skeleton``cd skeleton``mkdir bin, data, doc, ext, lib, tests, lib/PROJECT","title":"Creating a Ruby Skeleton"},{"content":"It’s been a pretty crazy February for me. However, I wanted to take some time just to catch up on progress and whats going on.\nI’m just passed the 1/2 mark of “Learn Ruby The Hard Way”. Hopefully with some free time and extra boost of determination I got this last week I should be able to close the gap and finish this book up in the next week or two.\nThis last Wednesday I got the pleasure of attending the Indy.rb meetup group. I can confirm that what people say is true and Ruby does have one of the most open and friendly communities. As well my worries about Ruby jobs in Indy have mostly been quenched, as I learned of several job openings and emailed one of the people there who said he would provide a list of all the Ruby on Rails employers in the area he knows of who are hiring. Over all its a pretty exciting aspect that I might not be to hard to get a Ruby on Rails job in the area hopefully sometime soon.\nOn the social front I uploaded a bunch of code the other day to GitHub. While none if its in Ruby it some of my key projects from learning to code in languages like C++, Java, JavaScript, C#, and Python. Hopefully they will be getting some Ruby friends soon! I have also started recording videos for a youtube channel that will hopefully launch next month depending on free time for setting things up.\nWhile I got to close this out I would like to say thanks for following along in my journey to becoming an Junior Developer, as well as the first official post on my new blog “Program Practical”! More site edits are to come, I just wanted to get it done enough to start releasing content on it as I like to keep up with my every other day postings.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer.\n","permalink":"https://blog.oll.is/posts/2016-02-13_mid-month-review/","summary":"It’s been a pretty crazy February for me. However, I wanted to take some time just to catch up on progress and whats going on.\nI’m just passed the 1/2 mark of “Learn Ruby The Hard Way”. Hopefully with some free time and extra boost of determination I got this last week I should be able to close the gap and finish this book up in the next week or two.","title":"Mid Month Review"},{"content":"Working with strings in Ruby has been interesting. As the\nre is far more to pay attention to and what you can do then when dealing with just JavaScript.\nOne of my favorite things is the ability to put a variable right in the middle of a string without having to first break out of it and then add it in.\nJavaScript var my_var = “day”;\nconsole.log(“Isn’t to”+my_var+” just lovely?”);\nRuby my_var = “day”\nputs “Isn’t to#{my_var} just lovely?”\nFor me this is just a more clean and optimal way of writing code, we aren’t breaking out of the string to add a variable and it just looks cleaner. However, you have to be careful as not all quotes are created equal. Double quotes (“) tells Ruby to replace variables it finds with an #{}, but if you used just a single quote (‘) Ruby would leave the string alone and ignore any variables in it.\nmy_var = “day”\nputs “Isn’t to#{my_var} just lovely?”\noutput: Isn’t today just lovely?\u0026gt; my_var = “day”\nputs ‘Isn’t to#{my_var} just lovely?’\noutput: Isn’t to#{my_var} just lovely?\nAs you can see we get quite a different results. Although this could be great for debugging as you can pass over the un-formatted string to the console for review.\nAnother great formatting option in Ruby is using %{} instead of the #{}. With %{} you get the ability to apply the same format to multiple values, which can be great for templementing.\nformatter = “Although its %{temp} I’m really enjoying the %{like}”\nputs formatter % {temp : “cold”, like: “snow”}\nputs formatter % {temp : “raining”, like: “thunder”}\noutput: Although its cold I’m really enjoying the snow\noutput: Although its raining I’m really enjoying the thunder\nThe last example I will show is something I really wish JavaScript could do although I really wish I could do the two things mentioned above in it. Using three double quotation marks in a row indicates a multiline string. While you can do these in JavaScript, Ruby once again just as a cleaner way of doing it as I don’t have to put () after the end of each line.\nJavaScript var my_var = “ This \\\nis \\\nmy \\\nstirng”;\nRuby my_var = “””\nThis\nis\nmy\nstring\n“””\nWhile this might not be groundbreaking I love the cleanness and power Ruby provides to string control in its language. As well I hope if you are just getting into Ruby you have found something here helpful in you ability to control and manipulate strings.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer.\n","permalink":"https://blog.oll.is/posts/2016-02-07_string-theory-strings-in-ruby/","summary":"Working with strings in Ruby has been interesting. As the\nre is far more to pay attention to and what you can do then when dealing with just JavaScript.\nOne of my favorite things is the ability to put a variable right in the middle of a string without having to first break out of it and then add it in.\nJavaScript var my_var = “day”;\nconsole.log(“Isn’t to”+my_var+” just lovely?”);","title":"String Theory: Strings in Ruby"},{"content":"Yes, so I am what I would call a hobbiest. I have worked the past 5 years “Learning to program” without any real discipline. Due to this is skipped all of the “challenges” except for the bootstrap ones. However, I still feel their quoted time is horribly off. I have seen a lot of other post from people said they went from 0 to done in under 1000 hours. way under what they quote.\n","permalink":"https://blog.oll.is/posts/2016-02-06_yes-so-i-am-what-i-would-call-a-hobbiest./","summary":"Yes, so I am what I would call a hobbiest. I have worked the past 5 years “Learning to program” without any real discipline. Due to this is skipped all of the “challenges” except for the bootstrap ones. However, I still feel their quoted time is horribly off. I have seen a lot of other post from people said they went from 0 to done in under 1000 hours. way under what they quote.","title":"Yes, so I am what I would call a hobbiest."},{"content":"I have started working on a very small side project while I am learning Ruby. It’s just a simple time tracker that helps me with my current IT admin job. I have been trying some different time trackers like Toggle. While I find them awesome, in fact I’m using Toggle right now to track my time writing, they are just not suited for fast paced, high risk world of IT. Okay, maybe just fast paced sometimes, with no risk. Mainly I just needed something that could track time, I could give it a title, and then a few different text fields. One for private notes, and one for notes that would be up in the labor report.\nThanks to my time at Free Code Camp, not only did I have the knowledge that I could accomplish this, but I could even estimate how long parts of the project would take. During the creation of this application I am also studying Ruby with Chris Pine’s Learn To Program. One of the odd things about ruby is how it handles integers in strings.\nI am very used to JavaScript where almost anything goes when putting things into strings. However, in Ruby you have to tell it “Hello, Player “ + my_number.to_s. This is especially true when adding single characters that are numbers to integers. Chris points out that by doing this how is the computer suppose to know what you want? If you had 2 + ‘5’, are you asking for 25 or 7?\nIn my program you can have multiple timers running at any given time. To simply running them all, I don’t store a list of all the timers time, I just get time time off the timer every second, update, and display the new time. I was doing something along the lines of the code below.\n//Get time stamp, and split into minutes and seconds\nvar timer = ($(event).html()).split(“:”);\n//Add turn time into seconds and add 1\ntimer = (timer[0] * 60) + timer[1] + 1;\n/** Do turn back into string and update display **/\nWhile this is legal JavaScript I was really shocked when after the timer hit a minute I was getting results like, 59, 1:01, 100:02, 10000:03. I was really confused on what was going on here. Luckily I had just read the chapter in learn to program that I mentioned before. The compiler really isn’t sure what I was waning so it just joined the stings as it saw proper. I updated my code with what you see below.\n//Get time stamp, and split into minutes and seconds\nvar timer = ($(event).html()).split(“:”);\n//Add turn time into seconds and add 1\ntimer = Number(timer[0] * 60) + Number(timer[1]) + 1;\n/** Do turn back into string and update display **/\nThis time I specified that the string objects “timer” are to be treated as numbers and not strings. I was shocked to already start seeing some benefits to Ruby, but mostly that even now as someone new to the Ruby language I can see why people push that its a good language to learn. At first I was really thinking to have to call “.to_s” would just be tedious, it’s there for a good reason, and for newer programmers learning JavaScript the error I ran into might not be such an easy one to solve, that would have just been avoided by using a language that is a little more locked down.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer.\n","permalink":"https://blog.oll.is/posts/2016-02-05_javascript-lesson-learned-thanks-to-ruby/","summary":"I have started working on a very small side project while I am learning Ruby. It’s just a simple time tracker that helps me with my current IT admin job. I have been trying some different time trackers like Toggle. While I find them awesome, in fact I’m using Toggle right now to track my time writing, they are just not suited for fast paced, high risk world of IT. Okay, maybe just fast paced sometimes, with no risk.","title":"JavaScript Lesson Learned Thanks to Ruby"},{"content":"Great post, I have always been a fan of making apps for niche markets because of this. Sure my audience isn’t as broad but its a safer market.\n","permalink":"https://blog.oll.is/posts/2016-02-03_great-post-i-have-always-been-a-fan-of-making-apps-for-niche-markets-because-of-this./","summary":"Great post, I have always been a fan of making apps for niche markets because of this. Sure my audience isn’t as broad but its a safer market.","title":"Great post, I have always been a fan of making apps for niche markets because of this."},{"content":" With my Front End Developer Certificate behind me I start the next leg of my journey. I am mainly following the guidelines laid out in in Joshua kemp’s book “No Degree No Problem”. As of Monday I officially started working though the book Learning to Program by Chris Pine.\nRight off the bat I’m enjoying Ruby but it is very odd programming in a language without curly brackets. As the majority of my time programming as been on in C based languages I find this one a little odd.\nHowever laying out the plans I will spend this month focusing on two things. Getting though Learning to program and Learn Ruby the Hard Way. As well as finishing up my portfolio site. Once done with the books I’ll be moving onto the online course “One Month Rails”. This should take me into April, when I will going back to Free Code Camp! However its mostly to redo the algorithm challenges in the Ruby language. Particularly the Intermediate and Advance challenges. Last real learning from here other than open source projects and freelance work until getting hired will be completing the “Michael Hartl’s Rails Tutorial”.\nIt’ll be a crazy half year, as well during this time I’ll be looking a potential web development jobs, that if landed could throw things off schedule if they have tech they want me to learn but one day at a time. However the overall plan listed in my first post stays the same. Study 21 hours per week. Attend 4–5 meetups a month, although as I’m finding it might be more like 2–4 due to regularity in meetup events. I’ll be posting on here, or possibly my own blog if I decided to run one myself, at least 3 time a week and on twitter daily.\nI’ll also be launching another channel here soon, more to come on that as plans form.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer.\n","permalink":"https://blog.oll.is/posts/2016-02-03_step-2-learning-ruby/","summary":"With my Front End Developer Certificate behind me I start the next leg of my journey. I am mainly following the guidelines laid out in in Joshua kemp’s book “No Degree No Problem”. As of Monday I officially started working though the book Learning to Program by Chris Pine.\nRight off the bat I’m enjoying Ruby but it is very odd programming in a language without curly brackets. As the majority of my time programming as been on in C based languages I find this one a little odd.","title":"Step 2: Learning Ruby"},{"content":" Last night I was able to finish up the Simon project wrapping up the last of the requirements for Free Code Camp’s Front End Development Certificate. I am pretty excited to have completed this, while it’s just a certificate from a free online site, it means the completion of the first step in my journey.\nIt only took me about 3 weeks in all to get through all the required algorithms and projects. I really enjoyed the algorithms, they were challenging, and got me to finally understand Regular Expression. The projects also had a lot of fun in them although I only see 4 projects in all that I would call complex or do enough to be worth putting on a portfolio.\nFour Function Calculator. Good basic project for showing JavaScript control and updating DOM and using Event Handlers Wikipedia Search. Example of using public API’s from a major service. Simple project but gets the point across. Tic-Tac-Toe. Very simple project UI wise, but shows basic AI ability though JavaScript that is just fun to make Simon. Last and best project in my opinion. Not only does it take a ton (compared to projects prior) to make look like a simon game, but the JavaScript logic needed and heavy use of timers makes it a real challenge. Looking forward to my next steps. Many people have gone, on after getting their Front End Developer Certification, and gotten jobs working as web developers. However, I’m not sure this is the path I am wanting to go down. I have a goal of being a Junior Developer, particularly I would love to get into Backend or Full Stack development. I worry I wouldn’t find enough fulfillment in just doing front end web design, but this is coming from someone who has only done it as a hobby from time to time. Although if it was for a tech company or a company whose first priority is web I would be interested. My main fear would be to work for a company whose website is more of just an afterthought, and with that comes the lower salary, and lower respect for what you do.\nToday my books on Ruby should be arriving in the mail and I will being a month long frantic study session to get though both of them before March 1st. I will post more about the books soon, as well as some possible videos based on getting started with Ruby on Rails.\nAs always thanks for reading, and follow me on twitter for more daily updates and post on my journey from Senior IT Admin to Junior Developer.\n","permalink":"https://blog.oll.is/posts/2016-02-01_certified-front-end-developer/","summary":"Last night I was able to finish up the Simon project wrapping up the last of the requirements for Free Code Camp’s Front End Development Certificate. I am pretty excited to have completed this, while it’s just a certificate from a free online site, it means the completion of the first step in my journey.\nIt only took me about 3 weeks in all to get through all the required algorithms and projects.","title":"Certified Front End Developer"},{"content":"I have been working both extensively on my coding, and trying to come up with the “next steps” after I get done with Free Code Camp’s Front End Developer certification. Something I should hopefully have done in the next several days. Looking forward I come back to a question I asked in an earlier post about picking Ruby or JavaScript for continued learning for back-end/full stack development.\nThere has been a lot of great discussions with developers and local groups about the options. I have experience with both languages, although it’s more of just getting my feet wet with Ruby about a year ago. Even if I do go with Ruby I can see the importance’s of JavaScript meetups, as a lot of them focus on front end libraries, not just stuff like Node.js.\nI’m actually set to go to the indy.rb meetup group (and the new bloom.rb next time they meet) to meet the local community and to see what it’s all about. The guy who runs the groups has told me about how he just got done mentoring 5 guys who knew very little programming to Ruby on Rails developers because a local company needed developers so badly but can’t find any.\nThis is interesting because, while I see more JavaScript jobs on average, Ruby is reportedly growing in the area. I was stuck in the mind set of, more jobs equals a higher demand for programmers. I didn’t stop to think that the programmer base might be so low, that while jobs are not as plentiful companies are in so much more of a desperate need for the developers. Making entering the job market with only sample projects to serve as experience might be more than enough to land a job, and be an asset right off the bat. I have been listing to the audio book Soft Skills, in the book John talks about specializing to make yourself needed. He started as a programmer that specialized in printer languages, this gave him an amazing advantage in the job market because of the low employee pool of programmers that specialized in programming for printers.\nLooking at the job trends in Indiana for both Ruby and JavaScript on Gooroo’s site I found some interesting things.\nJavaScript [caption id=”attachment_23\u0026quot; align=”aligncenter” width=”610\u0026quot;]\nA good amount of month jobs advertised and pay[/caption]\n[caption id=”attachment_22\u0026quot; align=”aligncenter” width=”569\u0026quot;]\nJob posting is down almost 1/2[/caption]\nWhile one sites job posting might not be the best place to “confirm” overall posting and industry trends it’s still something to note. It’s also shouldn’t be surprising with places like Free Code Camp and so many others teaching people to code in JavaScript the pool of people trying to become a Junior JavaScript Developer is increasing. With this demand is being met and job numbers are coming down, in this can by almost half. However, 178 jobs / month is still a fantastic number if you ask me and makes JavaScript still a great choice.\nRuby [caption id=”attachment_25\u0026quot; align=”aligncenter” width=”561\u0026quot;]\nLow job posting, but higher pay[/caption]\n[caption id=”attachment_24\u0026quot; align=”aligncenter” width=”567\u0026quot;]\nJob posting up by 25%[/caption]\nRuby is a mixed bag, There are only 35 postings / month, although the pay is better, though not by much. Job posting has also gone up by almost 25% over the past year. While it’s still below JavaScript in over all posting by quite a bit it’s still a good prospect that jobs in the field are growing locally. As well if I move my job search to Chicago, as I am willing to move to Chicago for jobs, not only can you find 181 jobs / month in Chicago alone but some Junior Ruby Developer jobs have starting pays just below 100k a year.\nWhile I am still reviewing things as I’m very analytical and always second guess myself. I have to say the road is looking Ruby lined to me. While I’ll never give up on JavaScript as you can do some great things client side with it my overall goal is back-end or full stack development, so I’m more worried about the backbone of application development. I’m sure sometime next week or the week after I will have my mind made up for sure. However, if what the indy.rb attendants are telling me the truth about need, ruby will be the easiest way to find my first development job.\nMore to come, thanks for reading and keep on learning.\n","permalink":"https://blog.oll.is/posts/2016-01-30_road-lined-with-rubies/","summary":"I have been working both extensively on my coding, and trying to come up with the “next steps” after I get done with Free Code Camp’s Front End Developer certification. Something I should hopefully have done in the next several days. Looking forward I come back to a question I asked in an earlier post about picking Ruby or JavaScript for continued learning for back-end/full stack development.\nThere has been a lot of great discussions with developers and local groups about the options.","title":"The Road Lined with Rubies"},{"content":"Open source and example projects was major for my first Android App. I actually got a book called “Android for Programmers: An App-Driven Approach”. This was amazing because I got to see how these apps are made and put together instead or just reading the documentation and not knowing how things go together. Great article.\n","permalink":"https://blog.oll.is/posts/2016-01-29_open-source-and-example-projects-was-major-for-my-first-android-app./","summary":"Open source and example projects was major for my first Android App. I actually got a book called “Android for Programmers: An App-Driven Approach”. This was amazing because I got to see how these apps are made and put together instead or just reading the documentation and not knowing how things go together. Great article.","title":"Open source and example projects was major for my first Android App."},{"content":"Fantastic list, I was just recommended http://www.exercism.io/ from a redditor as a place to find an (almost) never ending list of projects to help further learning to code.\n","permalink":"https://blog.oll.is/posts/2016-01-29_fantastic-list-i-was-just-recommended-httpwww.exercism.io/","summary":"Fantastic list, I was just recommended http://www.exercism.io/ from a redditor as a place to find an (almost) never ending list of projects to help further learning to code.","title":"Fantastic list, I was just recommended http://www.exercism.io/"},{"content":"Yeah I have yet to get into Node.JS. However, the Ruby community in Indy has been amazingly been having some amazing communications with me via Reddit. Plan is to head to their meet up and to see what Ruby is all about. Apparently there is a massive lack of Ruby developers in Indiana I’m not aware of.\n","permalink":"https://blog.oll.is/posts/2016-01-29_yeah-i-have-yet-to-get-into-node.js./","summary":"Yeah I have yet to get into Node.JS. However, the Ruby community in Indy has been amazingly been having some amazing communications with me via Reddit. Plan is to head to their meet up and to see what Ruby is all about. Apparently there is a massive lack of Ruby developers in Indiana I’m not aware of.","title":"Yeah I have yet to get into Node.JS."},{"content":"I have been pretty happy with Free Code Camp. They make a pretty easy approach, and if you are not new you don’t have to sit through all the “challenges” just go straight to the Algorithms and Projects to get Certified. To date I have fully completed:\nResponsive Design with Bootstrap Basic Algorithms Basic Projects Intermediate Algorithms I am currently working on the “Intermediate Projects” about 2/3 though with only 2 projects left. Although the basic projects were basic, they were fun and usually pretty different. From making a 4 function calculator, portfolio, pomodoro timer, to a random quote generator they each are pretty different. After doing the Intermediate Algorithms, I was pretty excited to get into the projects as they would be my last requirement from getting the Front End Developer Certification from Free Code Camp.\nIn this collection of Projects you have to complete a total of 6. I have just finished the 4th one and at this point pretty frustrated with the course materials. The first four projects all just have to deal with JSON API’s. The first one you make a weather app. Great you get to play with your first API, although they tell you no where you can’t use geo location due to CodePen limitations. This is frustrating because they don’t teach you how to use the javascript console yet, and the error is only in there. As well they teach your geo location out of nowhere so it’s safe to assume they mean for you to use it.\nThe next 3 projects are all the same, this time you get an array of data back from your call and you need to organize that data into a list/grid. Timing my development times the projects each take about 2 hours especially because as you get to the 3rd and 4th project to have all the logic memorized and aren’t doing anything more than wasting your time due to not being challenged. If I wasn’t so close to being done I would probably have stopped.\nHowever, there is light at the end of the tunnel. The last two projects is a Tic-Tac-Toe game with AI, and Simon Says. These are the real projects I was expecting in an intermediate collection. I wouldn’t have mind at all if they did 1 or even 2 of those API projects but to do 4 and then get to some projects that will actually require some thought makes it seem like they couldn’t come up with anything they deemed as “intermediate” and decided to teach you how to reskin a projects.\nHonestly with the reviews I have seen of the Backend section, and the experience from this last section I’m not sure if Free Code Camp is the place to learn Node.js if I do stay with JS and not switch over to Ruby on Rails. I love the Free Code Camp community and they admins do listen. So hopefully in time they will get some better projects. It’s just sad to me that someone who might have gone through the entire program and all the challenges would get such basic projects to finish out their first stage of learning. I truly feel I have become a much better programmer with their algorithm challenges and even still love to show off a few of the projects I have made. I can thank Free Code Camp for that. I don’t mean to come this off as a bashing article. It’s just something I have been frustrated with as I have spent all week on these projects.\n","permalink":"https://blog.oll.is/posts/2016-01-28_let-down-near-the-finish-line/","summary":"I have been pretty happy with Free Code Camp. They make a pretty easy approach, and if you are not new you don’t have to sit through all the “challenges” just go straight to the Algorithms and Projects to get Certified. To date I have fully completed:\nResponsive Design with Bootstrap Basic Algorithms Basic Projects Intermediate Algorithms I am currently working on the “Intermediate Projects” about 2/3 though with only 2 projects left.","title":"The Let Down Near the Finish Line"},{"content":"I have been struggling a lot lately in trying to decide my next steps as I finish Free Code Camp’s Front End Developer Certification. I figured I would blow through it quickly to get my legs back into web development after spending a good amount of time in C++ trying to build a 2d game engine.\nWhile it has been fun and I have got a friend started on programming using FCC’s easy to learn curriculum finding a job still has me perplexed. After reading/listening to Joshua kemp’s “No Degree, No Problem” I have been doing a lot of review in Ruby on Rails. I find many articles out there about how good the community is and how it's “exploding but has a lack of developers” making it easy for find Junior Developer jobs in the field. I see a lot of people refer to the image below from indeed showing the rate of growth compared to javascript.\nI left Node.JS out of the first one so we could see the other 3 well enough. As you can see below once we add in Node.JS the other ones are barely on the map. Now this could be attributed to Node.JS being new and the fact it come from zero to Ruby on Rails level in terms of % of job market posting in just 2–3 years. However, it brings up the question. Is Node.JS better to learn over Ruby on Rails for Junior Developers?\nThis isn’t helped when you look at percentage of matching job positions. Javascript is not only much higher, but Node.JS has passed Ruby on Rails.\nWhile I love to see so much growth in Ruby on Rails, it seems it would still be easier to get a javascript based job. Although it’s important to remember this is all meta data so this doesn’t distinguish Junior/Mid/Senior level jobs and is more of just a keyword search than anything.\nHowever, it stands what are the jobs in my area (Bloomington, IN, or anywhere in Indiana) while there seems to be a good amount of web development jobs none really talk about backend. A quick look on indeed.com shows there are some Junior Ruby Developer positions in Chicago although that would require an out of state relocation, something I’m not apposed to, just takes a lot more planning than a 50 mile commute. Of course Josh Kemp brings up the importance that jobs are found via networking not job posting. This is true for my current job, as it's not advertised it was just knowing the right person, same with my friends job in a data center. Meetup.com have tons of both Javascript and Ruby on Rails meet ups in the near 75 miles that I searched, meaning their could be a good Ruby job base in the state I’m not able to find by searching.\nSo what's better? I’m honestly not sure. Of course there could be many “it depends”. I will continue to research positions and trying to talk to the few developers I know. I find many more sites online that point out Ruby on Rails is the best for full stack, and Node.JS is more of an emerging market, but still uncertain. If you have any thoughts to add, or articles that I might have missed please feel free to post them as I would love some more insight as I prepare to finish up the current leg of my journey and prepare for the sprint to hopefully the finish line.\n","permalink":"https://blog.oll.is/posts/2016-01-26_ruby-over-javascript/","summary":"I have been struggling a lot lately in trying to decide my next steps as I finish Free Code Camp’s Front End Developer Certification. I figured I would blow through it quickly to get my legs back into web development after spending a good amount of time in C++ trying to build a 2d game engine.\nWhile it has been fun and I have got a friend started on programming using FCC’s easy to learn curriculum finding a job still has me perplexed.","title":"Ruby over JavaScript?"},{"content":"Thanks for the advice, I’m lucky enough to always find time to code daily, I have found locking myself down to 21 hours of coding a week has really accelerated my understanding and speed. I will look into DevOps automation. I had not be given that advice before, but it makes a lot of sense.\n","permalink":"https://blog.oll.is/posts/2016-01-25_thanks-for-the-advice-im-lucky-enough-to-always-find-time-to-code-daily-i-have-found-locking/","summary":"Thanks for the advice, I’m lucky enough to always find time to code daily, I have found locking myself down to 21 hours of coding a week has really accelerated my understanding and speed. I will look into DevOps automation. I had not be given that advice before, but it makes a lot of sense.","title":"Thanks for the advice, I’m lucky enough to always find time to code daily, I have found locking…"},{"content":"One of the things I try to push on my friends learning code is don’t get stuck on a lesson for 5 hours that should have taken 30 minutes just because you don’t fully understand it. Keep working it will come up enough that sooner or later the light bulb will turn on.\n","permalink":"https://blog.oll.is/posts/2016-01-25_one-of-the-things-i-try-to-push-on-my-friends-learning-code-is-dont-get-stuck-on-a-lesson-for-5/","summary":"One of the things I try to push on my friends learning code is don’t get stuck on a lesson for 5 hours that should have taken 30 minutes just because you don’t fully understand it. Keep working it will come up enough that sooner or later the light bulb will turn on.","title":"One of the things I try to push on my friends learning code is don’t get stuck on a lesson for 5…"},{"content":"One of the big reasons I love Free Code Camp is the simplicity behind it, and how advanced it gets when you get into projects. While I was sad to see the terminology go, I was happy to see how quickly changes were made when the community saw the new site in put in input on how to improve. I hear Ruby has the best community out there of any language. However, I wonder if that because they haven’t stumbled on the community at Free Code Camp.\n","permalink":"https://blog.oll.is/posts/2016-01-25_one-of-the-big-reasons-i-love-free-code-camp-is-the-simplicity-behind-it-and-how-advanced-it-gets/","summary":"One of the big reasons I love Free Code Camp is the simplicity behind it, and how advanced it gets when you get into projects. While I was sad to see the terminology go, I was happy to see how quickly changes were made when the community saw the new site in put in input on how to improve. I hear Ruby has the best community out there of any language.","title":"One of the big reasons I love Free Code Camp is the simplicity behind it, and how advanced it gets…"},{"content":"We all start somewhere I suppose. I’ve been “learning” to code for over 5 years now. Yet, here I am a Senior IT Administrator, not a programmer with very few projects to show of my years or “learning”. Its easy not to stay focus on one project or another, or wanting to jump to the newest language. I made a promise to myself, that this would be the year I hunker down, study, and apply for jobs as a Junior Developer.\nI’m hoping to track my journey well so that others that are attempting to self teach themselves might not lose 5 years like I did. As well hoping just to have public accountability for studying and staying on schedule.\nWhile I plan on posting soon the full plan and how I got on this road I will start tonight with posting a brief overview.\nI plan on studying coding for 21 hours a week. Broken down into about 2–3 hours days M-F, ~6–8h on Sat, and what ever is left on Sun. I also plan on posting 2–3 Medium post a week with hoping 3–4 tweets / day detailing and following my journey. There is also a goal for going to 4–5 coding meetup/events a month. Unfortunately I live in Bloomington and the groups are limited, so a 50–70 mile drive is needed for most events. Although I’m working hard to try and work 1 trip a week into my schedule.\nGot to start somewhere.\n","permalink":"https://blog.oll.is/posts/2016-01-24_staring-line/","summary":"We all start somewhere I suppose. I’ve been “learning” to code for over 5 years now. Yet, here I am a Senior IT Administrator, not a programmer with very few projects to show of my years or “learning”. Its easy not to stay focus on one project or another, or wanting to jump to the newest language. I made a promise to myself, that this would be the year I hunker down, study, and apply for jobs as a Junior Developer.","title":"Staring Line"}]